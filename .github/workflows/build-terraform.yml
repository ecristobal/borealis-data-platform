name       : 'Build infrastructure'

on         :
  workflow_call:
    inputs:
      domain                :
        required: true
        type    : string
      terraform-organization:
        required: true
        type    : string
      terraform-workspace   :
        required: true
        type    : string

permissions:
  contents       : read
  security-events: write

jobs       :
  build-infrastructure-staging:
    name    : 'Build infrastructure'
    runs-on : ubuntu-latest

    defaults:
      run:
        shell            : bash
        working-directory: infrastructure/${{ inputs.domain }}

    env     :
      TF_CLOUD_ORGANIZATION: ${{ inputs.terraform-organization }}
      TF_WORKSPACE         : ${{ inputs.terraform-workspace }}

    steps   :
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        with:
          cli_config_credentials_token: ${{ secrets.TF_TOKEN }}

      - name: Terraform init
        run : terraform init

      - name: Terraform format
        run : terraform fmt -check

      - name: Terraform validate
        run : terraform validate -no-color

      - name: Run SonarCloud analysis
        uses: sonarsource/sonarcloud-github-action@master
        with:
          fetch-depth   : 0
          projectBaseDir: infrastructure/${{ inputs.domain }}
          args          : >
            -Dsonar.organization=ecristobal
            -Dsonar.projectKey=ecristobal_borealis-data-platform-infrastructure-${{ inputs.domain }}
        env :
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN : ${{ secrets.SONAR_TOKEN }}

      - name: Snyk analysis
        uses: snyk/actions/iac@master
        env :
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          file: infrastructure/${{ inputs.domain }}/main.tf

      - name: Terraform plan
        run : terraform plan -input=false

      - name: Terraform apply
        if  : github.ref == 'refs/heads/main'
        run : terraform apply -auto-approve -input=false